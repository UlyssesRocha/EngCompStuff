/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ViewClient;

import Model.MyInterface;
import Model.PostIt;
import java.awt.Color;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.paint.Color.color;


/**
 *
 * @author ulysses
 */
public class PostItView extends javax.swing.JFrame {
    private final int postItId;
    private final Client master;
    private final String username;
    private final String token;
    MyInterface service;
    /**
     * Creates new form PostItView
     */
    
    public int getId(){
        return postItId;
    }
    
    public PostItView(Client master, String username, String token, int postItID, String text) throws RemoteException, NotBoundException {
        
        Registry r = LocateRegistry.getRegistry("localhost", 1099);
        service = (MyInterface)r.lookup("service");
        
        this.username = username;
        this.token = token;
        this.postItId = postItID;
        this.master = master;
        
        initComponents();
        jTextArea1.setText(text);
        jTextArea1.setBackground(colors(service.updatePostIt(username, token, postItId).getColor()));
        this.setVisible(true);
    }

    public void close(){
        master.removeView(this);
        this.setVisible(false);
        this.repaint();
    }
    public void closeRemote(){
        this.setVisible(false);
    }
    
    public void reload(){
          try {
            // TODO add your handling code here:
            PostIt u = service.updatePostIt(username, token, postItId);
           jTextArea1.setText(u.getText());
           jTextArea1.setBackground(colors(u.getColor()));
           this.setVisible(true);
        } catch (RemoteException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private Color colors(int value){
        switch (value){
            case (1):
                    return Color.WHITE;
            case (2):
                    return Color.YELLOW;
            case (3):
                    return Color.RED;
            case (4):
                    return Color.BLUE;
        }
        return Color.WHITE;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        textTxt = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        deletBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        colorBox = new javax.swing.JComboBox();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea1MouseReleased(evt);
            }
        });
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        textTxt.setViewportView(jTextArea1);

        deletBtn.setText("Deletar");
        deletBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletBtnActionPerformed(evt);
            }
        });

        addBtn.setText("+");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        colorBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Branco", "Amarelo", "Vermelho", "Azul" }));
        colorBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(textTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(colorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(deletBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletBtn)
                    .addComponent(addBtn)
                    .addComponent(colorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletBtnActionPerformed
        try {
            // TODO add your handling code here:
            service.removePostIt(username, token, postItId);
            master.removeView(this);
            this.setVisible(false);
        } catch (RemoteException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try {
            // TODO add your handling code here:
            master.addPostIt();
        } catch (RemoteException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyReleased
        try {
            // TODO add your handling code here:
            if(service.editPostIt(username, token, postItId, jTextArea1.getText()))
                System.out.println("FOI!");
        } catch (RemoteException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextArea1KeyReleased

    private void jTextArea1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseReleased
        reload();
    }//GEN-LAST:event_jTextArea1MouseReleased

    private void colorBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorBoxActionPerformed
        // TODO add your handling code here:
        jTextArea1.setBackground(colors(colorBox.getSelectedIndex()+1));
        try {
            service.editPostItColor(username, token, this.postItId, (colorBox.getSelectedIndex()+1));
        } catch (RemoteException ex) {
            Logger.getLogger(PostItView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_colorBoxActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox colorBox;
    private javax.swing.JButton deletBtn;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JScrollPane textTxt;
    // End of variables declaration//GEN-END:variables
}
